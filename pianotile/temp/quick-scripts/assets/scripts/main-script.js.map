{"version":3,"sources":["main-script.js"],"names":["cc","Class","extends","Component","editor","properties","movePanel","Node","bluePrefab","Prefab","whitePrefab","blackPrefab","longPrefab","redPrefab","initRow","tileWidth","tileHeight","speed","_newTopRow","_curBottomRow","_startPosition","_isFirstTile","_start","_end","_idx","_preTx","_tx","_arr","_tilesArr","_errors","_offestY","onLoad","position","i","addTile","y","length","Math","floor","random","num","prefab","type","tile","splice","push","children","rand","instantiate","getComponent","init","name","scaleX","scaleY","addChild","x","_destory","getCurrentTile","initSong","update","dt","curTile","console","log","scrollback","showWrongBlackTile","gameover","forEach","destroyTile","duraction","jumpUp","moveBy","p","easing","easeCubicActionOut","child","runAction","removeChild","fadeIn","fadeOut","sequences","sequence","showWrongRedTile"],"mappings":"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","file":"main-script.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["import songs from '../../assets/json/songs/song'\r\n\r\ncc.Class({\r\n\textends: cc.Component,\r\n\r\n\teditor: {\r\n\t\t//executeInEditMode: true\r\n\t},\r\n\r\n\tproperties: {\r\n\t\tmovePanel: cc.Node,\r\n\t\tbluePrefab: cc.Prefab,\r\n\t\twhitePrefab: cc.Prefab,\r\n\t\tblackPrefab: cc.Prefab,\r\n\t\tlongPrefab: cc.Prefab,\r\n\t\tredPrefab: cc.Prefab,\r\n\t\tinitRow: 7,\r\n\t\ttileWidth: 0,\r\n\t\ttileHeight: 0,\r\n\t\tspeed: 0,\r\n\t\t_newTopRow: null,\r\n\t\t_curBottomRow: null,\r\n\t\t_startPosition: null,\r\n\t\t_isFirstTile: true,\r\n\t\t_start: false,\r\n\t\t_end: false,\r\n\t\t_idx: 0,\r\n\t\t_preTx: -1,\r\n\t\t_tx: -1,\r\n\t\t_arr: [],\r\n\t\t_tilesArr: [],\r\n\t\t_errors: [],\r\n\t\t_offestY: null,\r\n\t},\r\n\r\n\tonLoad () {\r\n\t\tthis._curBottomRow = 0;\r\n\t\tthis._newTopRow = 0;\r\n\t\tthis._startPosition = this.movePanel.position;\r\n\t\tthis._arr = [0, 1, 2, 3]\r\n\t\tthis._idx = 0\r\n\t\tthis._preTx = -1\r\n\t\tthis._tx = -1\r\n\t\tthis._tilesArr = []\r\n\t\tthis._errors = ['ERROR_SPOT']\r\n\t\tthis._offestY = 0\r\n\t\tfor (let i = 0; i <= this.initRow; i++)\r\n\t\t\tthis.addTile()\r\n\t},\r\n\r\n\taddTile () {\r\n\t\tconst y = this._tilesArr.length===0? 0 : this._tilesArr[this._tilesArr.length - 1].y,\r\n\t\t\ti = Math.floor(Math.random() * this._arr.length),\r\n\t\t\tnum = this._arr[i]\r\n\t\tlet prefab = {},\r\n\t\t\ttype = '',\r\n\t\t\ttile = {}\r\n\t\tif (this._arr.splice(i, 1),\r\n\t\t\t-1 !== this._preTx && this._arr.push(this._preTx),\r\n\t\t\t0 === this.movePanel.children.length){\r\n\t\t\tprefab = this.bluePrefab;\r\n\t\t\ttype = 'START'\r\n\t\t} else {\r\n\t\t\tconst rand = Math.floor(Math.random() * 100);\r\n\t\t\tif(30 >= rand) {\r\n\t\t\t\tprefab = this.longPrefab\r\n\t\t\t\ttype = 'LONG'\r\n\t\t\t} else {\r\n\t\t\t\tprefab = this.blackPrefab\r\n\t\t\t\ttype = 'BLACK'\r\n\t\t\t}\r\n\t\t}\r\n\t\ttile = cc.instantiate(prefab);\r\n\t\ttile.getComponent(\"tile-script\").init(type, this);\r\n\t\ttile && (this._tilesArr.push(tile),\r\n\t\t\ttile.name = 'TILE_' + type,\r\n\t\t\ttile.scaleX = this.tileWidth / 135,\r\n\t\t\ttile.scaleY = this.tileHeight / 238,\r\n\t\t\tthis.movePanel.addChild(tile),\r\n\t\t\ttile.x = num * this.tileWidth,\r\n\t\t\ttile.y = y + this.tileHeight),\r\n\t\t\ttile._destory = false,\r\n\t\t\tthis._preTx = num\r\n\t},\r\n\r\n\tgetCurrentTile() {\r\n\t\treturn this._tilesArr[this._curBottomRow]\r\n\t},\r\n\r\n\tinitSong() {\r\n\r\n\t},\r\n\r\n\tupdate (dt) {\r\n\t\tif(!this._start || this._end) return\r\n\t\tthis._offestY += this.speed\r\n\t\tconst curTile = this.getCurrentTile()\r\n\t\tif (curTile && curTile.y <= 0 && !curTile._destory) {\r\n\t\t\tconsole.log('gameover')\r\n\t\t\tthis.scrollback()\r\n\t\t\tthis.showWrongBlackTile(curTile)\r\n\t\t\tthis.gameover()\r\n\t\t}\r\n\t\tthis.movePanel.children.forEach(tile => {\r\n\t\t\ttile.y -= this.speed\r\n\t\t\tif (tile && tile._destory && tile.y < 0) {\r\n\t\t\t\tconsole.log('update tile', tile)\r\n\t\t\t\tthis.destroyTile(tile)\r\n\t\t\t\tthis.addTile()\r\n\t\t\t\tthis._newTopRow++\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n\r\n\tscrollback() {\r\n\t\tconst duraction = 1.5;\r\n\t\tthis.movePanel.children.forEach(child => {\r\n\t\t\tconst jumpUp = cc.moveBy(duraction, cc.p(0, this.tileHeight)).easing(cc.easeCubicActionOut());\r\n\t\t\tchild.runAction(jumpUp)\r\n\t\t})\r\n\t},\r\n\r\n\tdestroyTile (tile) {\r\n\t\tthis.movePanel.removeChild(tile)\r\n\t},\r\n\r\n\tshowWrongBlackTile(tile) {\r\n\t\tconst fadeIn = cc.fadeIn(.6).easing(cc.easeCubicActionOut()),\r\n\t\t\tfadeOut = cc.fadeOut(.6).easing(cc.easeCubicActionOut()),\r\n\t\t\tsequences = [fadeIn, fadeOut, fadeIn, fadeOut, fadeIn]\r\n\t\ttile.runAction(cc.sequence(sequences))\r\n\t},\r\n\r\n\tshowWrongRedTile(x, y) {\r\n\t\tconsole.log('showWrongRedTile x', x)\r\n\t\tconsole.log('showWrongRedTile y', y)\r\n\t\tconst tile = cc.instantiate(this.redPrefab);\r\n\t\tconst fadeIn = cc.fadeIn(.6).easing(cc.easeCubicActionOut()),\r\n\t\t\tfadeOut = cc.fadeOut(.6).easing(cc.easeCubicActionOut()),\r\n\t\t\tsequences = [fadeIn, fadeOut, fadeIn, fadeOut, fadeIn]\r\n\t\ttile && (\r\n\t\t\ttile.name = 'TILE_' + 'RED',\r\n\t\t\t\ttile.scaleX = this.tileWidth / 135,\r\n\t\t\t\ttile.scaleY = this.tileHeight / 238,\r\n\t\t\t\tthis.movePanel.addChild(tile),\r\n\t\t\t\ttile.x = x * this.tileWidth,\r\n\t\t\t\ttile.y = (y + 1 + this._newTopRow) * this.tileHeight - this._offestY,\r\n\t\t\t\ttile.runAction(cc.sequence(sequences)),\r\n\t\t\t\tthis.gameover(this._errors[0])\r\n\t\t)\r\n\t},\r\n\r\n\tgameover(type) {\r\n\t\t// console.log('gameover')\r\n\t\tthis._end = true\r\n\t},\r\n\r\n\t// move() {\r\n\t// \tconst movePosition = cc.v2(this._startPosition.x,(this._startPosition.y + (this._curBottomRow + 1) * -150));\r\n\t// \tconsole.log('move movePosition', movePosition)\r\n\t// \tconsole.log('move this.movePanel', this.movePanel)\r\n\t// \tthis.movePanel.runAction(cc.sequence(\r\n\t// \t\tcc.moveTo(0.2, movePosition),\r\n\t// \t\tcc.callFunc(this.updateRender.bind(this))\r\n\t// \t))\r\n\t// }\r\n\r\n});\r\n"]}